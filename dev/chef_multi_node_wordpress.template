heat_template_version: 2013-05-23

description: |
  Configures a cloud server with chef-solo

parameters:
  keypair_name:
    type: string
    required: true

  stack_id:
    type: string
    required: true
    default: "webapp_wordpress"

  mysql_server_flavor:
    type: string
    required: true
    default: "performance1-1"

  mysql_server_name:
    type: string
    required: true
    default: "mysql_server"

  mysql_root_password:
    type: string
    required: true
    default: "verybadpass123"

  database_name:
    type: string
    default: "wordpress_db"

  database_username:
    type: string
    required: true
    default: "wordpres_admin"

  database_password:
    type: string
    required: true
    default: "verybadpass123"

  #WORDPRESS parameters
  wordpress_flavor:
    type: string
    required: true
    default: "performance1-1"

  wordpress_server_name:
    type: string
    required: true
    default: "wordpress_server"

  wordpress_database_username:
    required: true
    type: string
    default: "wp_dbuser"

  wordpress_database_password:
    required: true
    type: string
    default: "verybadpass123"

  wordpress_username:
    type: string
    required: true
    default: wordpress_admin

  wordpress_password:
    type: string
    required: true
    default: "verybadpass123"

  prefix:
    type: string
    default: wp

  version:
    type: string
    default: 3.6.1
    required: true

  public_sync_key:
    type: string
    description: the key to be used by lsyncd clients
    default: "public_sync_key"

  private_sync_key:
    type: string
    description: the key to be used by the lsyncd server
    default: "private_sync_key"

  ssl_private_key:
    type: string
    default: "ssl_private_key"

  ssl_certificate:
    type: string
    default: "ssl_certificate"

  ssl_intermediate_key:
    type: string
    default: "ssl_intermediate_key"

  wp_auth:
    type: string
    required: true
    default: "wp_auth"

  wp_logged_in:
    type: string
    required: true
    default: "wp_logged_in"

  wp_nonce:
    type: string
    required: true
    default: "wp_nonce"

  wp_secure_auth:
    type: string
    required: true
    default: "wp_secure_auth"

resources:
    ssh_key:
        type: "OS::Nova::KeyPair"
        properties:
            name: {get_param: keypair_name}
            save_private_key: true

    mysql_server:
        type: "Rackspace::Cloud::Server"
        properties:
            flavor: {get_param: mysql_server_flavor}
            image: "Ubuntu 12.04 LTS (Precise Pangolin)"
            name: { get_param: mysql_server_name }
            key_name: {Ref: ssh_key}

    update_apt:
        type: "OS::Heat::ChefSolo"
        properties:
            username: root
            private_key: {get_attr: [ssh_key, private_key]}
            host: {get_attr: [mysql_server, accessIPv4]}
            Berksfile: |
                site :opscode
                cookbook 'apt',
                    git: 'github_heat_cookbooks:rackerlabs/heat-cookbooks.git',
                    rel: 'apt'
            node:
                run_list: ["recipe[apt]"]

    install_make:
        type: "OS::Heat::ChefSolo"
        DependsOn: update_apt
        properties:
            username: root
            private_key: {get_attr: [ssh_key, private_key]}
            host: {get_attr: [mysql_server, accessIPv4]}
            Berksfile: |
                site :opscode
                cookbook 'build-essential'
            node:
                run_list: ["recipe[build-essential]"]

    mysql_config: 
        type: "OS::Heat::ChefSolo"
        DependsOn: install_make
        properties:
            username: root
            private_key: {get_attr: [ssh_key, private_key]}
            host: {get_attr: [mysql_server, accessIPv4]}
            Berksfile: |
                site :opscode
                cookbook 'build-essential'
                cookbook 'chef-client'
                cookbook 'chef-solo-search'
                cookbook 'apt',
                    git: 'github_heat_cookbooks:rackerlabs/heat-cookbooks.git',
                    rel: 'apt'
                 cookbook 'firewall',
                    git: 'github_heat_cookbooks:rackerlabs/heat-cookbooks.git',
                    rel: 'firewall'                   
                 cookbook 'mysql',
                    git: 'github_heat_cookbooks:rackerlabs/heat-cookbooks.git',
                    rel: 'checkmate-solo-mysql'                   
                cookbook 'holland',
                    git: 'github_heat_cookbooks:rackerlabs/heat-cookbooks.git',
                    rel: 'holland'
                cookbook 'monit',
                    git: 'github_heat_cookbooks:rackerlabs/heat-cookbooks.git',
                    rel: 'monit'
            node:
                deployment:
                    id: {get_param: stack_id}
                mysql:
                    server_root_password: {get_param: mysql_root_password}
                run_list: [
                    "recipe[apt]",
                    "recipe[build-essential]",
                    "recipe[chef-solo-search]",
                    "recipe[firewall]",
                    "recipe[mysql::server]",
                    "recipe[holland]",
                    "recipe[holland::common]",
                    "recipe[holland::mysqldump]",
                    "recipe[monit]"]

            data_bags:
                mysql: 
                    encrypted: true
                    id: {get_param: stack_id}
                    mysql:
                        host: {get_attr: [mysql_server, privateIPv4]}
                        database_name: {get_param: database_name}

    wordpress_server:
        type: "Rackspace::Cloud::Server"
        properties:
            flavor: { get_param: wordpress_flavor }
            image: "Ubuntu 12.04 LTS (Precise Pangolin)"
            name: { get_param: wordpress_server_name }
            key_name: {Ref: ssh_key}

    install_wordpress_apt:
        DependsOn: "mysql_config"
        type: "OS::Heat::ChefSolo"
        properties:
            username: root
            private_key: {get_attr: [ssh_key, private_key]}
            host: {get_attr: [wordpress_server, accessIPv4]}
            Berksfile: |
                site :opscode
                cookbook 'apt',
                    git: 'github_heat_cookbooks:rackerlabs/heat-cookbooks.git',
                    rel: 'apt'
            node:
                run_list: ["recipe[apt]"]

    install_wordpress_make:
        type: "OS::Heat::ChefSolo"
        DependsOn: install_wordpress_apt
        properties:
            username: root
            private_key: {get_attr: [ssh_key, private_key]}
            host: {get_attr: [wordpress_server, accessIPv4]}
            Berksfile: |
                site :opscode
                cookbook 'build-essential'
            node:
                run_list: ["recipe[build-essential]"]

    wordpress_master: 
        DependsOn: "install_wordpress_make"
        type: "OS::Heat::ChefSolo"
        properties:
            private_key: {get_attr: [ssh_key, private_key]}
            host: {get_attr: [wordpress_server, accessIPv4]}
            Berksfile: "https://raw2.github.com/heat-ci/heat-templates/master/dev/chef_wordpress_berksfile"

            node:
                deployment:
                    id: {get_param: stack_id}
                wordpress:
                    version: {get_param: version}
                run_list: ["recipe[build-essential]",
                           "recipe[chef-solo-search]",
                           "recipe[firewall]",
                           "recipe[apt]",
                           "recipe[wordpress]",
                           "recipe[lsyncd::install]",
                           "recipe[vsftpd]",
                           "recipe[memcached]"]

            data_bags:
                wordpress:
                    id: {get_param: stack_id}
                    encrypted: true
                    wordpress:
                        database:
                            create_db_user: true
                            create_db: true
                            host: {get_attr: [mysql_server, privateIPv4]}
                            database_name: {get_param: database_name}
                            server_root_password: {get_param: mysql_root_password}
                            password: {get_param: database_password}
                            username: {get_param: database_username}
                            prefix: {get_param: prefix}
                        user:
                            name: {get_param: wordpress_username}
                            password: {get_param: wordpress_password}
                            hash: {get_param: wordpress_password}
                        wp_auth: {get_param: wp_auth}
                        wp_logged_in: {get_param: wp_logged_in}
                        wp_nonce: {get_param: wp_nonce}
                        wp_secure_auth: {get_param: wp_secure_auth}
                        path: "/"
                    lsyncd:
                        user:
                            ssh_pub_key: {get_attr: [ssh_key, public_key]}
                            ssh_private_key: {get_attr: [ssh_key, private_key]}
                            name: {get_param: wordpress_username}
                            password: {get_param: wordpress_password}
                        slaves: [{get_attr: [wordpress_server, privateIPv4]}]
                    apache:
                        domain_name: {get_attr: [wordpress_server, accessIPv4]}
                        path: "/"
                    varnish:
                        master_backend: {get_attr: [wordpress_server, privateIPv4]}

outputs:
    private_key:
        value: { get_attr: [ssh_key, private_key] }
    public_key:
        value: { get_attr: [ssh_key, public_key] }
    key_name:
        value: {get_param: keypair_name}
    mysql_root_password:
        value: { get_param: mysql_root_password }
    mysql_host:
        value: { get_attr: [mysql_server, accessIPv4] }
    wordpress_url:
        value: { get_attr: [wordpress_server, accessIPv4]}
    database_name:
        value: {get_param: database_name}
    database_password:
        value: {get_param: database_password}
    database_username:
        value: {get_param: database_username}
    wordpress_user:
        value: {get_param: wordpress_username}
    wordpress_pass:
        value: {get_param: wordpress_password}
