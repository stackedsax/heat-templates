heat_template_version: 2013-05-23

description: |
  HEAT template for configuring IIS on Windows Server

parameters:

  server_hostname:
    type: string
    default: HeatWinResource
    description: Windows Server Name
    constraints:
    - length:
        min: 1
        max: 64
    - allowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
      description: must begin with a letter and contain only alphanumeric characters.
    
  image:
    type: string
    default: Windows Server 2012
    description: Windows Server Image
  
  flavor:
    type: string
    description: Rackspace Cloud Server flavor
    default: 4GB Standard Instance
    constraints:
    - allowed_values:
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: must be a valid Rackspace Cloud Server flavor.

  
resources:

  rs_windows_server:
    type: "Rackspace::Cloud::WinServer"
    properties:
      name: { get_param: server_hostname }
      flavor: { get_param: flavor }
      image: { get_param: image }
      user_data: |
        # Add IIS role
        Function Add-IIS () {
            Write-Host "[*] Starting IIS Server and dependencies install"
            Import-Module ServerManager
            $out = Add-WindowsFeature -Name Web-Server,Web-WebServer,Web-Common-Http,Web-Default-Doc,Web-Dir-Browsing,Web-Http-Errors,Web-Static-Content,Web-Http-Redirect,Web-Health,Web-Http-Logging,Web-Custom-Logging,Web-Log-Libraries,Web-ODBC-Logging,Web-Request-Monitor,Web-Http-Tracing,Web-Performance,Web-Stat-Compression,Web-Dyn-Compression,Web-Security,Web-Filtering,Web-Basic-Auth,Web-CertProvider,Web-Client-Auth,Web-Digest-Auth,Web-Cert-Auth,Web-IP-Security,Web-Url-Auth,Web-Windows-Auth,Web-App-Dev,Web-Net-Ext,Web-Net-Ext45,Web-AppInit,Web-ASP,Web-Asp-Net,Web-Asp-Net45,Web-CGI,Web-ISAPI-Ext,Web-ISAPI-Filter,Web-Includes,Web-WebSockets,Web-Mgmt-Tools,Web-Mgmt-Console,Web-Mgmt-Compat,Web-Metabase,Web-Lgcy-Mgmt-Console,Web-Scripting-Tools
            if ($out.ExitCode -eq "NoChangeNeeded"){
                Write-Host "[*] IIS server is already installed"
            }
            else {
                Write-Host "[*] IIS Server and dependencies have been installed"
            }
        }
        Add-IIS
outputs:

  public_ip:
    value: { get_attr: [ rs_windows_server, accessIPv4 ] }
    description: public IP of the windows server
  


