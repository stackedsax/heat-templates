heat_template_version: 2013-05-23

description: |
  Configures a cloud server with chef-solo

parameters:
  keypair_name:
    type: string
    required: true

  stack_id:
    type: string
    required: true
    default: "mysql_stack"

  mysql_server_flavor:
    type: string
    required: true
    default: "performance1-1"

  mysql_server_name:
    type: string
    required: true
    default: "mysql_server"

  mysql_root_password:
    type: string
    required: true
    default: "verybadpass123"

  database_name:
    type: string
    default: "mysql_database"

  database_username:
    type: string
    required: true
    default: "mysql_user"

  database_password:
    type: string
    required: true
    default: "verybadpass123"

  keypair_name:
    type: string
    required: true
    default: "badkeypair"

  private_key:
   type: string
   required: true
   default: "badprivatekey"

resources:
    mysql_server:
        type: "Rackspace::Cloud::Server"
        properties:
            flavor: {get_param: mysql_server_flavor}
            image: "Ubuntu 12.04 LTS (Precise Pangolin)"
            name: { get_param: mysql_server_name }
            key_name: {get_param: keypair_name}

    update_apt:
        type: "OS::Heat::ChefSolo"
        properties:
            username: root
            private_key: {get_param: private_key}
            host: {get_attr: [mysql_server, accessIPv4]}
            Berksfile: |
                site :opscode
                cookbook 'apt',
                    git: 'github_heat_cookbooks:rackerlabs/heat-cookbooks.git',
                    rel: 'apt'
            node:
                run_list: ["recipe[apt]"]

    install_make:
        type: "OS::Heat::ChefSolo"
        DependsOn: update_apt
        properties:
            username: root
            private_key: {get_param: private_key}
            host: {get_attr: [mysql_server, accessIPv4]}
            Berksfile: |
                site :opscode
                cookbook 'build-essential'
            node:
                run_list: ["recipe[build-essential]"]

    mysql_config: 
        type: "OS::Heat::ChefSolo"
        DependsOn: install_make
        properties:
            username: root
            private_key: {get_param: private_key}
            host: {get_attr: [mysql_server, accessIPv4]}
            Berksfile: |
                site :opscode
                cookbook 'build-essential'
                cookbook 'chef-client'
                cookbook 'chef-solo-search'
                cookbook 'apt',
                    git: 'github_heat_cookbooks:rackerlabs/heat-cookbooks.git',
                    rel: 'apt'
                 cookbook 'firewall',
                    git: 'github_heat_cookbooks:rackerlabs/heat-cookbooks.git',
                    rel: 'firewall'                   
                 cookbook 'mysql',
                    git: 'github_heat_cookbooks:rackerlabs/heat-cookbooks.git',
                    rel: 'checkmate-solo-mysql'                   
                cookbook 'holland',
                    git: 'github_heat_cookbooks:rackerlabs/heat-cookbooks.git',
                    rel: 'holland'
                cookbook 'monit',
                    git: 'github_heat_cookbooks:rackerlabs/heat-cookbooks.git',
                    rel: 'monit'
            node:
                deployment:
                    id: {get_param: stack_id}
                mysql:
                    server_root_password: {get_param: mysql_root_password}
                run_list: [
                    "recipe[build-essential]",
                    "recipe[apt]",
                    "recipe[chef-solo-search]",
                    "recipe[firewall]",
                    "recipe[mysql::server]",
                    "recipe[holland]",
                    "recipe[holland::common]",
                    "recipe[holland::mysqldump]",
                    "recipe[monit]"]

            data_bags:
                mysql: 
                    encrypted: true
                    id: {get_param: stack_id}
                    mysql:
                        database_name: {get_param: database_name}

outputs:
    private_key:
        value: {get_param: private_key}
